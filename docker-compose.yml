version: '3.8'

services:
  frontend:
    container_name: model3d-frontend
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile
      args:
        PUBLIC_PATH: "${FRONTEND_PUBLIC_PATH:-/}"
    ports:
      - "${FRONTEND_PUBLIC_PORT}:80"
    depends_on:
      - backend-api
      - postgres
      - redis
    restart: unless-stopped
  backend-api:
    container_name: model3d-api
    build: .
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    command: go run ./cmd/main.go
    restart: unless-stopped
  postgres:
    container_name: model3d-postgres
    image: postgres:alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./postgres-db/:/var/lib/postgresql/data/
      - ./db_dump/:/docker-entrypoint-initdb.d/
    restart: unless-stopped
  redis:
    container_name: model3d-redis
    image: redis
    volumes:
      - ./redis/:/data/
    restart: unless-stopped

volumes:
  redis:
    driver: local
  postgres-db:
